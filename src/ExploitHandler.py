from Model_client import AzureClient
import json  
import subprocess

def runExploits(user_query):
    print("üîç Running exploit functions...")
   
    yield f"{json.dumps({'data': "Running exploit functions ...", 'istool': False, 'tool_out': ''})}\n" 
    client = AzureClient.get_client()
    deployment = AzureClient.deployment

    response = client.chat.completions.create(
        model=deployment,
        messages=[
            {"role": "system", "content": "You are a cyber bot and your task is to run exploit tools based on user queries."},
            {"role": "user", "content": user_query},
        ],
        functions=functions,
        stream=False
    )

    out = response.choices[0].message.function_call
    if out is not None:
        func_name = out.name
        func_args = json.loads(out.arguments)  
        print(func_args)
        command=func_args['command']
        print(command)

        if func_name == "SearchSploitRun":
            yield json.dumps({'data': f"Running  ...{command}", 'istool': False, 'tool_out': ''}) + "\n"

          
            output = SearchSploitRun(func_args["command"])  
            
            yield json.dumps({"data": " task completed.", "istool": True, "tool_out": output}) + "\n"
        else:
            
            yield json.dumps({"data": " ‚ùå Unknown function call received.", "istool": False, "tool_out": output}) + "\n"
    else:
        yield json.dumps({"data": " NO Unknown function call received.", "istool": False, "tool_out": output}) + "\n"

functions = [
    {
        "name": "SearchSploitRun",
        "description": "Searches Exploit-DB for known vulnerabilities and exploits based on user queries.",
        "parameters": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string",
                    "description": "A single searchsploit command to run. Examples:\n"
                                   "- `searchsploit apache`\n"
                                   "- `searchsploit CVE-2021-41773`\n"
                                   "- `searchsploit -m 49721`\n"
                                   "- `searchsploit -w openssh`\n"
                                   "- `searchsploit --cve 2022-22965`"
                }
            },
            "required": ["command"]
        }
    }
]

def SearchSploitRun(command):
    print(f"üîç Running SearchSploit with command: {command}")

    command_list = command.split(" ")

    result = subprocess.run(command_list, capture_output=True, text=True)

    output = ""
    if result.stdout:
        output += result.stdout
    if result.stderr:
        output += f"\n‚ùå Errors: {result.stderr}"
    
    return output  
